From ec1b189e189f26f69f62349f6717ff1e139f4670 Mon Sep 17 00:00:00 2001
From: chalesyu <574249312@qq.com>
Date: Sun, 23 Jan 2022 00:00:00 +0800
Subject: [PATCH 7/7] [NOT WORK] A63 DRAM

This code didn't work currrectly.
---
 arch/arm/include/asm/arch-sunxi/cpu.h     |  1 +
 arch/arm/include/asm/arch-sunxi/dram.h    |  2 +-
 arch/arm/mach-sunxi/Makefile              |  2 +-
 arch/arm/mach-sunxi/dram_sunxi_dw.c       | 98 ++++++++++++++---------
 arch/arm/mach-sunxi/dram_timings/Makefile |  2 +-
 5 files changed, 65 insertions(+), 40 deletions(-)

diff --git a/arch/arm/include/asm/arch-sunxi/cpu.h b/arch/arm/include/asm/arch-sunxi/cpu.h
index b08f202374..87aa2a0ae0 100644
--- a/arch/arm/include/asm/arch-sunxi/cpu.h
+++ b/arch/arm/include/asm/arch-sunxi/cpu.h
@@ -18,6 +18,7 @@
 #define SOCID_H3	0x1680
 #define SOCID_V3S	0x1681
 #define SOCID_H5	0x1718
+#define SOCID_A63	0x1719
 #define SOCID_R40	0x1701
 
 #endif /* _SUNXI_CPU_H */
diff --git a/arch/arm/include/asm/arch-sunxi/dram.h b/arch/arm/include/asm/arch-sunxi/dram.h
index c3b3e1f512..74f4999de2 100644
--- a/arch/arm/include/asm/arch-sunxi/dram.h
+++ b/arch/arm/include/asm/arch-sunxi/dram.h
@@ -28,7 +28,7 @@
 #elif defined(CONFIG_MACH_SUN9I)
 #include <asm/arch/dram_sun9i.h>
 #elif defined(CONFIG_MACH_SUN50I_H6)
-#include <asm/arch/dram_sun50i_h6.h>
+#include <asm/arch/dram_sunxi_dw.h>
 #elif defined(CONFIG_MACH_SUN50I_H616)
 #include <asm/arch/dram_sun50i_h616.h>
 #else
diff --git a/arch/arm/mach-sunxi/Makefile b/arch/arm/mach-sunxi/Makefile
index 3f081d92f3..b8f7f00457 100644
--- a/arch/arm/mach-sunxi/Makefile
+++ b/arch/arm/mach-sunxi/Makefile
@@ -38,7 +38,7 @@ obj-$(CONFIG_DRAM_SUN9I)	+= dram_sun9i.o
 obj-$(CONFIG_SPL_SPI_SUNXI)	+= spl_spi_sunxi.o
 obj-$(CONFIG_SUNXI_DRAM_DW)	+= dram_sunxi_dw.o
 obj-$(CONFIG_SUNXI_DRAM_DW)	+= dram_timings/
-obj-$(CONFIG_DRAM_SUN50I_H6)	+= dram_sun50i_h6.o
+obj-$(CONFIG_DRAM_SUN50I_H6)	+= dram_sunxi_dw.o
 obj-$(CONFIG_DRAM_SUN50I_H6)	+= dram_timings/
 obj-$(CONFIG_DRAM_SUN50I_H616)	+= dram_sun50i_h616.o
 obj-$(CONFIG_DRAM_SUN50I_H616)	+= dram_timings/
diff --git a/arch/arm/mach-sunxi/dram_sunxi_dw.c b/arch/arm/mach-sunxi/dram_sunxi_dw.c
index 9107b114df..482dcdf3b1 100644
--- a/arch/arm/mach-sunxi/dram_sunxi_dw.c
+++ b/arch/arm/mach-sunxi/dram_sunxi_dw.c
@@ -18,6 +18,9 @@
 #include <linux/delay.h>
 #include <linux/kconfig.h>
 
+#define DEBUG
+#define CONFIG_SUNXI_DRAM_DW_32BIT
+
 static void mctl_phy_init(u32 val)
 {
 	struct sunxi_mctl_ctl_reg * const mctl_ctl =
@@ -265,6 +268,7 @@ static void mctl_set_master_priority(uint16_t socid)
 	case SOCID_H5:
 		mctl_set_master_priority_h5();
 		return;
+	case SOCID_A63:
 	case SOCID_R40:
 		mctl_set_master_priority_r40();
 		return;
@@ -422,51 +426,58 @@ static void mctl_set_cr(uint16_t socid, struct dram_para *para)
 
 static void mctl_sys_init(uint16_t socid, struct dram_para *para)
 {
+#define CCM_MBUS_RESET_RESET		(0x1 << 31)
+#define MBUS_CLK_GATE			(0x1 << 31)
 	struct sunxi_ccm_reg * const ccm =
 			(struct sunxi_ccm_reg *)SUNXI_CCM_BASE;
 	struct sunxi_mctl_ctl_reg * const mctl_ctl =
 			(struct sunxi_mctl_ctl_reg *)SUNXI_DRAM_CTL0_BASE;
 
-	clrbits_le32(&ccm->mbus0_clk_cfg, MBUS_CLK_GATE);
-	clrbits_le32(&ccm->mbus_reset, CCM_MBUS_RESET_RESET);
-	clrbits_le32(&ccm->ahb_gate0, 1 << AHB_GATE_OFFSET_MCTL);
-	clrbits_le32(&ccm->ahb_reset0_cfg, 1 << AHB_RESET_OFFSET_MCTL);
+	clrbits_le32(&ccm->mbus_cfg, MBUS_CLK_GATE);
+	clrbits_le32(&ccm->mbus_gate, CCM_MBUS_RESET_RESET);
+//	clrbits_le32(&ccm->ahb_gate0, 1 << AHB_GATE_OFFSET_MCTL);
+//	clrbits_le32(&ccm->ahb_reset0_cfg, 1 << AHB_RESET_OFFSET_MCTL);
 	clrbits_le32(&ccm->pll5_cfg, CCM_PLL5_CTRL_EN);
-	if (socid == SOCID_A64 || socid == SOCID_R40)
-		clrbits_le32(&ccm->pll11_cfg, CCM_PLL11_CTRL_EN);
+//	if (socid == SOCID_A64 || socid == SOCID_R40)
+//		clrbits_le32(&ccm->pll11_cfg, CCM_PLL11_CTRL_EN);
 	udelay(10);
 
+#define CCM_DRAMCLK_CFG_RST		(0x1 << 31)
+
 	clrbits_le32(&ccm->dram_clk_cfg, CCM_DRAMCLK_CFG_RST);
 	udelay(1000);
 
-	if (socid == SOCID_A64 || socid == SOCID_R40) {
-		clock_set_pll11(CONFIG_DRAM_CLK * 2 * 1000000, false);
-		clrsetbits_le32(&ccm->dram_clk_cfg,
-				CCM_DRAMCLK_CFG_DIV_MASK |
-				CCM_DRAMCLK_CFG_SRC_MASK,
-				CCM_DRAMCLK_CFG_DIV(1) |
-				CCM_DRAMCLK_CFG_SRC_PLL11 |
-				CCM_DRAMCLK_CFG_UPD);
-	} else if (socid == SOCID_H3 || socid == SOCID_H5 || socid == SOCID_V3S) {
-		clock_set_pll5(CONFIG_DRAM_CLK * 2 * 1000000, false);
-		clrsetbits_le32(&ccm->dram_clk_cfg,
-				CCM_DRAMCLK_CFG_DIV_MASK |
-				CCM_DRAMCLK_CFG_SRC_MASK,
-				CCM_DRAMCLK_CFG_DIV(1) |
-				CCM_DRAMCLK_CFG_SRC_PLL5 |
-				CCM_DRAMCLK_CFG_UPD);
-	}
-	mctl_await_completion(&ccm->dram_clk_cfg, CCM_DRAMCLK_CFG_UPD, 0);
-
-	setbits_le32(&ccm->ahb_reset0_cfg, 1 << AHB_RESET_OFFSET_MCTL);
-	setbits_le32(&ccm->ahb_gate0, 1 << AHB_GATE_OFFSET_MCTL);
-	setbits_le32(&ccm->mbus_reset, CCM_MBUS_RESET_RESET);
-	setbits_le32(&ccm->mbus0_clk_cfg, MBUS_CLK_GATE);
+#define CCM_DRAMCLK_CFG_UPD		(0x1 << 16)
+//	if (socid == SOCID_A64 || socid == SOCID_R40) {
+//		clock_set_pll11(CONFIG_DRAM_CLK * 2 * 1000000, false);
+//		clrsetbits_le32(&ccm->dram_clk_cfg,
+//				CCM_DRAMCLK_CFG_DIV_MASK |
+//				CCM_DRAMCLK_CFG_SRC_MASK,
+//				CCM_DRAMCLK_CFG_DIV(1) |
+//				CCM_DRAMCLK_CFG_SRC_PLL11 |
+//				CCM_DRAMCLK_CFG_UPD);
+//	} else if (socid == SOCID_H3 || socid == SOCID_A63 ||socid == SOCID_H5 || socid == SOCID_V3S) {
+//		clock_set_pll5(CONFIG_DRAM_CLK * 2 * 1000000, false);
+//		clrsetbits_le32(&ccm->dram_clk_cfg,
+//				CCM_DRAMCLK_CFG_DIV_MASK |
+//				CCM_DRAMCLK_CFG_SRC_MASK,
+//				CCM_DRAMCLK_CFG_DIV(1) |
+//				CCM_DRAMCLK_CFG_SRC_PLL5 |
+//				CCM_DRAMCLK_CFG_UPD);
+//	}
+//	mctl_await_completion(&ccm->dram_clk_cfg, CCM_DRAMCLK_CFG_UPD, 0);
+
+//	setbits_le32(&ccm->ahb_reset0_cfg, 1 << AHB_RESET_OFFSET_MCTL);
+//	setbits_le32(&ccm->ahb_gate0, 1 << AHB_GATE_OFFSET_MCTL);
+	setbits_le32(&ccm->mbus_gate, CCM_MBUS_RESET_RESET);
+	setbits_le32(&ccm->mbus_cfg, MBUS_CLK_GATE);
 
 	setbits_le32(&ccm->dram_clk_cfg, CCM_DRAMCLK_CFG_RST);
 	udelay(10);
 
-	writel(socid == SOCID_H5 ? 0x8000 : 0xc00e, &mctl_ctl->clken);
+//	writel(socid == SOCID_H5 ? 0x8000 : 0xc00e, &mctl_ctl->clken);
+	writel(socid == SOCID_A63 ? 0x8000 : 0xc00e, &mctl_ctl->clken);
+
 	udelay(500);
 }
 
@@ -490,7 +501,8 @@ static int mctl_channel_init(uint16_t socid, struct dram_para *para)
 
 	/* setting VTC, default disable all VT */
 	clrbits_le32(&mctl_ctl->pgcr[0], (1 << 30) | 0x3f);
-	if (socid == SOCID_H5)
+//	if (socid == SOCID_H5)
+	if (socid == SOCID_A63)
 		setbits_le32(&mctl_ctl->pgcr[1], (1 << 24) | (1 << 26));
 	else
 		clrsetbits_le32(&mctl_ctl->pgcr[1], 1 << 24, 1 << 26);
@@ -509,7 +521,8 @@ static int mctl_channel_init(uint16_t socid, struct dram_para *para)
 		u32 setmask = IS_ENABLED(CONFIG_DRAM_ODT_EN) ?
 				DX_GCR_ODT_DYNAMIC : DX_GCR_ODT_OFF;
 
-		if (socid == SOCID_H5) {
+//		if (socid == SOCID_H5) {
+		if (socid == SOCID_A63) {
 			clearmask |= 0x2 << 8;
 			setmask |= 0x4 << 8;
 		}
@@ -517,9 +530,13 @@ static int mctl_channel_init(uint16_t socid, struct dram_para *para)
 	}
 
 	/* AC PDR should always ON */
-	clrsetbits_le32(&mctl_ctl->aciocr, socid == SOCID_H5 ? (0x1 << 11) : 0,
+//	clrsetbits_le32(&mctl_ctl->aciocr, socid == SOCID_H5 ? (0x1 << 11) : 0,
+//			0x1 << 1);
+	clrsetbits_le32(&mctl_ctl->aciocr, socid == SOCID_A63 ? (0x1 << 11) : 0,
 			0x1 << 1);
 
+
+
 	/* set DQS auto gating PD mode */
 	setbits_le32(&mctl_ctl->pgcr[2], 0x3 << 6);
 
@@ -537,7 +554,7 @@ static int mctl_channel_init(uint16_t socid, struct dram_para *para)
 		/* dphy & aphy phase select 270 degree */
 		clrsetbits_le32(&mctl_ctl->pgcr[2], (0x3 << 10) | (0x3 << 8),
 				(0x1 << 10) | (0x1 << 8));
-	} else if (socid == SOCID_A64 || socid == SOCID_H5) {
+	} else if (socid == SOCID_A64 || socid == SOCID_A63 || socid == SOCID_H5) {
 		/* dphy & aphy phase select ? */
 		clrsetbits_le32(&mctl_ctl->pgcr[2], (0x3 << 10) | (0x3 << 8),
 				(0x0 << 10) | (0x3 << 8));
@@ -579,7 +596,7 @@ static int mctl_channel_init(uint16_t socid, struct dram_para *para)
 
 		mctl_phy_init(PIR_PLLINIT | PIR_DCAL | PIR_PHYRST |
 			      PIR_DRAMRST | PIR_DRAMINIT | PIR_QSGATE);
-	} else if (socid == SOCID_A64 || socid == SOCID_H5) {
+	} else if (socid == SOCID_A64 ||socid == SOCID_A63 || socid == SOCID_H5) {
 		clrsetbits_le32(&mctl_ctl->zqcr, 0xffffff, CONFIG_DRAM_ZQ);
 
 		mctl_phy_init(PIR_ZCAL | PIR_PLLINIT | PIR_DCAL | PIR_PHYRST |
@@ -640,7 +657,7 @@ static int mctl_channel_init(uint16_t socid, struct dram_para *para)
 	/* set PGCR3, CKE polarity */
 	if (socid == SOCID_H3 || socid == SOCID_V3S)
 		writel(0x00aa0060, &mctl_ctl->pgcr[3]);
-	else if (socid == SOCID_A64 || socid == SOCID_H5 || socid == SOCID_R40)
+	else if (socid == SOCID_A64 || socid == SOCID_A63 || socid == SOCID_H5 || socid == SOCID_R40)
 		writel(0xc0aa0060, &mctl_ctl->pgcr[3]);
 
 	/* power down zq calibration module for power save */
@@ -884,6 +901,10 @@ unsigned long sunxi_dram_init(void)
 		.dx_write_delays = SUN8I_H5_DX_WRITE_DELAYS,
 		.ac_delays	 = SUN8I_H5_AC_DELAYS,
 #endif
+
+		.dx_read_delays  = SUN8I_R40_DX_READ_DELAYS,
+		.dx_write_delays = SUN8I_R40_DX_WRITE_DELAYS,
+		.ac_delays	 = SUN8I_R40_AC_DELAYS,
 	};
 /*
  * Let the compiler optimize alternatives away by passing this value into
@@ -902,6 +923,9 @@ unsigned long sunxi_dram_init(void)
 	uint16_t socid = SOCID_H5;
 #endif
 
+	uint16_t socid = SOCID_A63;
+
+
 	mctl_sys_init(socid, &para);
 	if (mctl_channel_init(socid, &para))
 		return 0;
@@ -916,7 +940,7 @@ unsigned long sunxi_dram_init(void)
 	if (socid == SOCID_H3)
 		writel(0x0c000400, &mctl_ctl->odtcfg);
 
-	if (socid == SOCID_A64 || socid == SOCID_H5 || socid == SOCID_R40) {
+	if (socid == SOCID_A64 ||socid == SOCID_A63 || socid == SOCID_H5 || socid == SOCID_R40) {
 		/* VTF enable (tpr13[8] == 1) */
 		setbits_le32(&mctl_ctl->vtfcr,
 			     (socid != SOCID_A64 ? 3 : 2) << 8);
diff --git a/arch/arm/mach-sunxi/dram_timings/Makefile b/arch/arm/mach-sunxi/dram_timings/Makefile
index 39a8756c29..bf038c7b11 100644
--- a/arch/arm/mach-sunxi/dram_timings/Makefile
+++ b/arch/arm/mach-sunxi/dram_timings/Makefile
@@ -1,7 +1,7 @@
 obj-$(CONFIG_SUNXI_DRAM_DDR3_1333)	+= ddr3_1333.o
 obj-$(CONFIG_SUNXI_DRAM_LPDDR3_STOCK)	+= lpddr3_stock.o
 obj-$(CONFIG_SUNXI_DRAM_DDR2_V3S)	+= ddr2_v3s.o
-obj-$(CONFIG_SUNXI_DRAM_H6_LPDDR3)	+= h6_lpddr3.o
+obj-$(CONFIG_SUNXI_DRAM_H6_LPDDR3)	+=  lpddr3_stock.o
 obj-$(CONFIG_SUNXI_DRAM_H6_DDR3_1333)	+= h6_ddr3_1333.o
 # currently only DDR3 is supported on H616
 obj-$(CONFIG_MACH_SUN50I_H616)		+= h616_ddr3_1333.o
-- 

