void __fastcall eye_delay_compensation(__dram_para_t *para)
{
  unsigned int v1; // r2
  __dram_para_t *v2; // r4
  unsigned int v3; // r3
  _DWORD *v4; // r1
  _DWORD *v5; // r1
  _DWORD *v6; // r1
  _DWORD *v7; // r1
  int v8; // r7
  int v9; // r6
  int v10; // r6
  int v11; // lr
  int v12; // r5
  unsigned int v13; // r2
  int v14; // r12
  int v15; // r3
  unsigned int v16; // r3
  _DWORD *v17; // r2

  v1 = para->dram_tpr11;
  v2 = para;
  v3 = para->dram_tpr12;
  v4 = (_DWORD *)67121936;
  do
  {
    *v4 |= ((v1 & 0xF) << 9) | 2 * (v3 & 0xF);
    ++v4;
  }
  while ( v4 != (_DWORD *)67121972 );
  v5 = (_DWORD *)67122064;
  do
  {
    *v5 |= ((unsigned __int8)v1 >> 4 << 9) | 2 * ((unsigned __int8)v3 >> 4);
    ++v5;
  }
  while ( v5 != (_DWORD *)67122100 );
  v6 = (_DWORD *)67122192;
  do
  {
    *v6 |= (((v1 >> 8) & 0xF) << 9) | 2 * ((v3 >> 8) & 0xF);
    ++v6;
  }
  while ( v6 != (_DWORD *)67122228 );
  v7 = (_DWORD *)67122320;
  do
  {
    *v7 |= ((unsigned __int16)v1 >> 12 << 9) | 2 * ((unsigned __int16)v3 >> 12);
    ++v7;
  }
  while ( v7 != (_DWORD *)67122356 );
  v8 = (v1 >> 16) & 0xF;
  v9 = (v8 << 9) | 2 * ((v3 >> 16) & 0xF);
  MEMORY[0x4003100] &= 0xFBFFFFFF;
  MEMORY[0x4003334] |= v9;
  MEMORY[0x4003338] |= v9;
  v10 = (v1 >> 20) & 0xF;
  v11 = (v10 << 9) | 2 * ((v3 >> 20) & 0xF);
  MEMORY[0x40033B4] |= v11;
  MEMORY[0x40033B8] |= v11;
  v12 = (v1 >> 24) & 0xF;
  v13 = v1 >> 28;
  v14 = (v12 << 9) | 2 * ((v3 >> 24) & 0xF);
  MEMORY[0x4003434] |= v14;
  MEMORY[0x4003438] |= v14;
  v15 = (v13 << 9) | 2 * (v3 >> 28);
  MEMORY[0x40034B4] |= v15;
  MEMORY[0x40034B8] |= v15;
  MEMORY[0x400333C] |= v8 << 25;
  MEMORY[0x40033BC] |= v10 << 25;
  MEMORY[0x400343C] |= v12 << 25;
  MEMORY[0x40034BC] |= v13 << 25;
  MEMORY[0x4003100] |= 0x4000000u;
  _usdelay(1);
  v16 = v2->dram_tpr10;
  v17 = (_DWORD *)67121728;
  do
  {
    *v17 |= (unsigned __int8)v16 >> 4 << 8;
    ++v17;
  }
  while ( v17 != (_DWORD *)67121788 );
  MEMORY[0x4003218] |= (v16 & 0xF) << 8;
  MEMORY[0x400321C] |= v16 & 0xF00;
  MEMORY[0x4003280] |= (unsigned __int16)v16 >> 12 << 8;
}